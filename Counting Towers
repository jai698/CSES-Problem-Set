#include <bits/stdc++.h>
using namespace std;
//--------------------------------------------------------------//
typedef vector<int> vi;
typedef vector<vector<int>> vvi;
typedef vector<long long> vl;
typedef vector<vector<long long>> vvl;
typedef vector<bool> vb;
typedef vector<string> vs;
typedef vector<char> vc;
typedef unordered_map<int,int> umii;
typedef priority_queue<int> maxh;
typedef priority_queue<int,vi,greater<int>> minh;
typedef vector<vector<bool>> vvb;
typedef map<int, int> mii;
typedef map<long long, long long> mll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef unsigned long long ull;
typedef long double ld;
 
#define ll long long
#define amax(a, b)          a = max(a, b)
#define amin(a, b)          a = min(a, b)
#define mp(a,b)             make_pair(a,b)
#define pb(n)               push_back(n)
#define ff                  first
#define ss                  second
#define bn                  begin()
#define prt(v)              for(auto i:v) cout << i << " "; cout << "\n";
#define en                  end()
#define nl                  ("\n")
#define sp(n)               cout<<setprecision(n)<<fixed;
#define loop(i, a, b)       for (int i = a; i < b; i++)
#define loopr(i, a, b)      for (int i = b; i < a; i--)
#define all(a)              a.begin(), a.end()
#define sz(x)               ((int)(x).size())
 
// ----------------------------------------------------------------//
const long long MOD = 1000000007;
const int MAX_N = 500001;
const double PI = 3.14159265358979;
const double INF=1e15;
 
/*---------------------------------------------------------------------------*/ 
bool revsort(ll a, ll b){return (a > b);}
void reverseStr(string&str){int n=str.length();for(int i=0;i<n/2;i++){swap(str[i],str[n-i-1]);}}
bool ispal(string x){int n=x.size();for(int i=0;i<n/2;i++){if(x[i]!=x[n-i-1])return 0;}return 1;}
void printall(vi v){for(auto ele:v)cout<<ele<<" ";}
int modadd(int a, int b,int m){a%=m;b%=m;return (a+b)%m;}
int modmul(int a, int b,int m){a%=m;b%=m;return (a*b)%m;}
int modsub(int a, int b,int m){a%=m;b%=m;return (a-b)%m;}
int gcd(int a, int b){if(b==0)return a;return gcd(b,a%b);}
int expo(int a, int n,int m){int res=1;while(n){if(n&1){res=modmul(res,a,m);--n;}else{a=modmul(a,a,m);n>>=1;}}return res;}
int expo(int a, int n){int res=1;while(n){if(n&1){res=res*a;--n;}else{a=a*a;n>>=1;}}return res;}
/*---------------------------------------------------------------------------*/ 
 
 
 
// // =============== !!! ~ ~ ~ code starts here ~ ~ ~ !!! ===============

int solveUsingRec(int n,int type){
    if(n == 1){
        return 1;
    }
    if(type == 1){
        ll ans = ((4*solveUsingRec(n-1,1))%MOD + (solveUsingRec(n-1,2))%MOD)%MOD;
        return ans;
    }
    else{
        ll ans = ((solveUsingRec(n-1,1))%MOD + (2*solveUsingRec(n-1,2))%MOD)%MOD;
        return ans;
    }
}

ll solveUsingMem(int n,int type,vector<vector<int>> &dp){
    if(n == 1){
        return 1;
    }
    if(dp[n][type] != -1){
        return dp[n][type];
    }
    if(type == 1){
        ll ans = ((4*solveUsingMem(n-1,1,dp))%MOD + (solveUsingMem(n-1,2,dp))%MOD)%MOD;
        dp[n][type] = ans;
        return dp[n][type];
    }
    else{
        ll ans = ((solveUsingMem(n-1,1,dp))%MOD + (2*solveUsingMem(n-1,2,dp))%MOD)%MOD;
        dp[n][type] = ans;
        return dp[n][type];
    }
}

ll solveUsingTab(int n){
    vector<vector<int>> dp(1e6+1,vector<int>(2));
    dp[n][0] = 1;
    dp[n][1] = 1;
        for(int i = n - 1; i >= 0; i--){
            dp[i][0] = (2LL * dp[i+1][0] + dp[i+1][1]) % MOD;
            dp[i][1] = (4LL * dp[i+1][1] + dp[i+1][0]) % MOD;
        }
    int ans = (dp[1][0] + dp[1][1])%MOD;
    return ans;
}

ll solveUsingTabSO(int n){
    vector<ll> curr(1e6 + 1), next(1e6 + 1);
    curr[n] = 1;
    next[n] = 1;
    
    for(int i = n - 1; i >= 0; i--){
        curr[i] = (2LL * curr[i+1] + next[i+1]) % MOD;
        next[i] = (4LL * next[i+1] + curr[i+1]) % MOD;
    }
    
    int ans = (curr[1] + next[1]) % MOD;
    return ans;
}
    
int main() {
    
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<vector<int>> dp(n+1,vector<int>(3,-1));
        int ans = (solveUsingMem(n,1,dp) + solveUsingMem(n,2,dp))%MOD;
        // int ans = solveUsingTab(n);
        cout<<ans<<nl;
    }
    return 0;
}
