#include <bits/stdc++.h>
using namespace std;
//--------------------------------------------------------------//
typedef vector<int> vi;
typedef vector<vector<int>> vvi;
typedef vector<long long> vl;
typedef vector<vector<long long>> vvl;
typedef vector<bool> vb;
typedef vector<string> vs;
typedef vector<char> vc;
typedef unordered_map<int,int> umii;
typedef priority_queue<int> maxh;
typedef priority_queue<int,vi,greater<int>> minh;
typedef vector<vector<bool>> vvb;
typedef map<int, int> mii;
typedef map<long long, long long> mll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef unsigned long long ull;
typedef long double ld;
 
#define ll long long
#define amax(a, b)          a = max(a, b)
#define amin(a, b)          a = min(a, b)
#define mp(a,b)             make_pair(a,b)
#define pb(n)               push_back(n)
#define ff                  first
#define ss                  second
#define bn                  begin()
#define prt(v)              for(auto i:v) cout << i << " "; cout << "\n";
#define en                  end()
#define nl                  ("\n")
#define sp(n)               cout<<setprecision(n)<<fixed;
#define loop(i, a, b)       for (int i = a; i < b; i++)
#define loopr(i, a, b)      for (int i = b; i < a; i--)
#define all(a)              a.begin(), a.end()
#define sz(x)               ((int)(x).size())
 
// ----------------------------------------------------------------//
const long long MOD = 1000000007;
const int MAX_N = 500001;
const double PI = 3.14159265358979;
const double INF=1e15;
 
/*---------------------------------------------------------------------------*/ 
bool revsort(ll a, ll b){return (a > b);}
void reverseStr(string&str){int n=str.length();for(int i=0;i<n/2;i++){swap(str[i],str[n-i-1]);}}
bool ispal(string x){int n=x.size();for(int i=0;i<n/2;i++){if(x[i]!=x[n-i-1])return 0;}return 1;}
void printall(vi v){for(auto ele:v)cout<<ele<<" ";}
int modadd(int a, int b,int m){a%=m;b%=m;return (a+b)%m;}
int modmul(int a, int b,int m){a%=m;b%=m;return (a*b)%m;}
int modsub(int a, int b,int m){a%=m;b%=m;return (a-b)%m;}
int gcd(int a, int b){if(b==0)return a;return gcd(b,a%b);}
int expo(int a, int n,int m){int res=1;while(n){if(n&1){res=modmul(res,a,m);--n;}else{a=modmul(a,a,m);n>>=1;}}return res;}
int expo(int a, int n){int res=1;while(n){if(n&1){res=res*a;--n;}else{a=a*a;n>>=1;}}return res;}
/*---------------------------------------------------------------------------*/ 
 
 
 
// // =============== !!! ~ ~ ~ code starts here ~ ~ ~ !!! ===============

int solveUsingRec(int i,vector<int> &nums,int target){
    if(target == 0) return 1;
    if(target < 0) return 0;
    if(i > nums.size()) return 0;

    int ans = ((solveUsingRec(i,nums,target-nums[i]))%MOD + (solveUsingRec(i+1,nums,target))%MOD)%MOD;
    return ans;
}

int solveUsingMem(int i,vector<int> &nums,int target,vector<vector<int>> &dp){
    if(target == 0) return 1;
    if(target < 0) return 0;
    if(i > nums.size()) return 0;
    if(dp[i][target] != -1) return dp[i][target];

    int ans = ((solveUsingMem(i,nums,target-nums[i],dp))%MOD + (solveUsingMem(i+1,nums,target,dp))%MOD)%MOD;
    dp[i][target] = ans;
    return dp[i][target];
}

int solveUsingTab(vector<int> &a,int x){
    int n = a.size();
    vector<vector<int>> dp(n + 1, vector<int>(x + 1));
    for(int i=0;i<n;i++){
        dp[i][0] = 1;
    }
    for(int i = n - 1; i >= 0; i--){
        for(int sum = 1; sum <= x; sum++){
            int skipping = dp[i + 1][sum];
            int picking = 0;
            if(a[i] <= sum){
                picking = dp[i][sum - a[i]];
            }
            dp[i][sum] = (skipping + picking) % MOD;
        }
    }
    return dp[0][x];
}
int main() {

    int n;
    cin>>n;
    int x;
    cin>>x;
    vi nums(n);
    for(int i=0;i<n;i++){
        cin>>nums[i];
    }
    
    // int ans = solveUsingRec(0,nums,x);
    // vector<vector<int>> dp(nums.size()+1,vector<int>(x+1,-1));
    // int ans = solveUsingMem(0,nums,x,dp);
    int ans = solveUsingTab(nums,x);
    cout<<ans<<nl;
        
    return 0;
}
